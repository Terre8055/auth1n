name: Track deployment frequency

on:
  push:
    branches:
      - develop

#   schedule:
#     - cron: "*/2 * * * *" #test
#     - cron: "0 0 * * 1" 
#     - cron: "0 0 * * 5"

env:
  GIT_SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}

permissions:
  id-token: write
  contents: read

jobs:
  deployment-frequency:
    name: Deployment frequency scan
    runs-on: ubuntu-20.04

    steps:

    - name: Send Slack Message - Generating Deployment Metrics
      env:
        SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
      run: |
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"Generating Deployment Metrics :infinity:\"}" ${{ secrets.SLACK_WEBHOOK}}

    - name: Retrieve deployment frequency
      uses: DeveloperMetrics/deployment-frequency@main
      id: deployment-frequency
      with:
        workflows: 'AWS Trivy Scan'
        actions-token: "${{ secrets.GITHUB_TOKEN }}"
        default-branch: "develop"
    
    - name: Retrieve lead time to changes
      uses: DeveloperMetrics/lead-time-for-changes@main
      with:
        workflows: 'AWS Trivy Scan'
        actions-token: "${{ secrets.GITHUB_TOKEN }}"
        default-branch: "develop"

    - name: Read deployment frequency markdown
      id: read-markdown
      run: |
        MARKDOWN_CONTENT=$(cat ${{ steps.deployment-frequency.outputs.markdown-file }})
        echo "MARKDOWN_CONTENT<<EOF" >> $GITHUB_ENV
        echo "$MARKDOWN_CONTENT" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Send metrics report to Slack Channel 
      env:
        SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
        MARKDOWN_CONTENT: ${{ env.MARKDOWN_CONTENT }}
      run: |
          
          curl -X POST -H 'Content-type: application/json' --data '{"text": "'"${MARKDOWN_CONTENT}"'"}' ${{ secrets.SLACK_WEBHOOK}}